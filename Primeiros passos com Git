Primeiros passos com Git

Inicia-se fazendo a instalação do Git, que é o sistemas que faz o controle de versionamento..

Pós instalado do Git, devemos configurar o agente Git para fazer a comunicação com o Servidor que pode ser o GitHub, GitLab ou outro, comunicação esta que é feito por chave SSH. 

Primeiro comando para que devemos lembrar e fazer uso e  git help ou git help + comando desejado para ter as  

Primeiro pode-se criar a pasta que servira de base para o projeto e será usada como repositório ou com o próprio comamndo git seguindo do nome do repositório exemplo; 
git init "nome_repositório".

Para visualizar a pasta oculta de inicialização do repositorio git (Pasta onde fica todo o histórico de utilização deste repositório):
ls -al

Verificando o status do Branch:
git status

Verificando os commit que foram feitos:
git log

Enviando os arquivos para o repositório GitHub

Configurando o Editor de Texto de sua preferencia para o Git.
-  git config --global core.editor <nome_editor>

Git Pull 
Baixa as alterações do repositório remoto(GitHub).

Shift + Q 
Saindo da Tela de Log do Git.

Git checkout a885b9992f34c7f(Parte do registro do commit para fazer a busca)
Retornando no commit para verificar artefato do código no momento daquele commit.

git checkout Master
Retorna no estágio original do Branch (Último commit registrado).

Git checkout -- (nome do aquivo)
Para descartar alguma mudança feito nom arquivo antes de ser add.

Git checkout -- .
Desfaz todos as mudanças feitas em todos os arquivos do Branch, lembrando que isso antes de ser commitado.

Git checkout HEAD -- (NOME DO AQUIVO)
Descarta a última mudança mesmo depois de ter add.

Git Revert (Artefado do código do commit)
Com o comando é possível reverter o último commit executado, desde que não tenha feito um Git Push porque,
caso tenha enviado para GitHub alguem pode ter feito um Pull Request do arquivos e ficará com arquivos diferentes do que está trabalhando.

Git Reset HEAD~1 
Volta para o último commit executado

Git Reset HEAD~1 --HARD
Além de volta o commit anterior o HARD apaga todo o histórico, o registro do commit.

CONFLITOS NO GIT

Como resolver os conflitos no Git?
Primeiro; geralmente acontece conflitos quando há mais de uma pessoa,  colaborando, contribuindo na inserção dos dados, Segundo; devemos compararmos os arquivos que estão com divergências e arruma-los conforme a demanda.

Branching 
É uma lista de commits e representa uma ramificação no repositório.

Branch Master  é a padrão.

Git Branch (Apresenta qual branch é usada).

Criando uma nova Branch:
git branch <nome_branch>

Deletando uma branch:
git branch -d <nome_branch>

Mudando de Branch 
Quando solicitamos a mudamos de branch, a branch chamada irá carregar os commits da branch de origem mas os seus commits que forem criados. 
Git checkout <nome_branch>

GIT Merge


GIT Rebase


 
 